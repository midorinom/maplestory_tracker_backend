"""empty message

Revision ID: 4516c592a999
Revises: 
Create Date: 2022-11-11 23:26:10.654465

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4516c592a999'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('classes_enum',
    sa.Column('classes', sa.VARCHAR(length=20), nullable=False),
    sa.PrimaryKeyConstraint('classes')
    )
    op.create_table('dailies_default',
    sa.Column('dailies_list', sa.VARCHAR(length=50), nullable=False),
    sa.PrimaryKeyConstraint('dailies_list')
    )
    op.create_table('roles_enum',
    sa.Column('roles', sa.VARCHAR(length=20), nullable=False),
    sa.PrimaryKeyConstraint('roles')
    )
    op.create_table('tracking_enum',
    sa.Column('tracking', sa.VARCHAR(length=20), nullable=False),
    sa.PrimaryKeyConstraint('tracking')
    )
    op.create_table('weeklies_default',
    sa.Column('weeklies_list', sa.VARCHAR(length=50), nullable=False),
    sa.PrimaryKeyConstraint('weeklies_list')
    )
    op.create_table('bosses',
    sa.Column('id', sa.SMALLINT(), nullable=False),
    sa.Column('region', sa.VARCHAR(length=20), nullable=True),
    sa.Column('name', sa.VARCHAR(length=20), nullable=True),
    sa.Column('crystal', sa.BIGINT(), nullable=True),
    sa.ForeignKeyConstraint(['region'], ['roles_enum.roles'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('events_character_shops',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('region', sa.VARCHAR(length=20), nullable=True),
    sa.Column('currency', sa.VARCHAR(length=20), nullable=True),
    sa.Column('item', sa.VARCHAR(length=30), nullable=True),
    sa.Column('cost', sa.SMALLINT(), nullable=True),
    sa.Column('quantity', sa.SMALLINT(), nullable=True),
    sa.ForeignKeyConstraint(['region'], ['roles_enum.roles'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('events_main',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('region', sa.VARCHAR(length=20), nullable=True),
    sa.Column('name', sa.VARCHAR(length=30), nullable=True),
    sa.Column('start_date', sa.DATE(), nullable=True),
    sa.Column('end_date', sa.DATE(), nullable=True),
    sa.ForeignKeyConstraint(['region'], ['roles_enum.roles'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('events_sub',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('region', sa.VARCHAR(length=20), nullable=True),
    sa.Column('name', sa.VARCHAR(length=30), nullable=True),
    sa.Column('start_date', sa.DATE(), nullable=True),
    sa.Column('end_date', sa.DATE(), nullable=True),
    sa.ForeignKeyConstraint(['region'], ['roles_enum.roles'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('events_world_shops',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('region', sa.VARCHAR(length=20), nullable=True),
    sa.Column('currency', sa.VARCHAR(length=20), nullable=True),
    sa.Column('item', sa.VARCHAR(length=30), nullable=True),
    sa.Column('cost', sa.SMALLINT(), nullable=True),
    sa.Column('quantity', sa.SMALLINT(), nullable=True),
    sa.ForeignKeyConstraint(['region'], ['roles_enum.roles'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('users',
    sa.Column('username', sa.VARCHAR(length=20), nullable=False),
    sa.Column('role', sa.VARCHAR(length=20), nullable=True),
    sa.Column('pw_hash', sa.VARCHAR(length=60), nullable=True),
    sa.Column('event', sa.VARCHAR(length=30), nullable=True),
    sa.ForeignKeyConstraint(['role'], ['roles_enum.roles'], ),
    sa.PrimaryKeyConstraint('username')
    )
    op.create_table('characters',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('username', sa.VARCHAR(length=20), nullable=True),
    sa.Column('class_name', sa.VARCHAR(length=20), nullable=True),
    sa.Column('ign', sa.VARCHAR(length=12), nullable=True),
    sa.Column('level', sa.SMALLINT(), nullable=True),
    sa.Column('tracking', sa.VARCHAR(length=20), nullable=True),
    sa.Column('is_main', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['class_name'], ['classes_enum.classes'], ),
    sa.ForeignKeyConstraint(['tracking'], ['tracking_enum.tracking'], ),
    sa.ForeignKeyConstraint(['username'], ['users.username'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('legion',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('username', sa.VARCHAR(length=20), nullable=True),
    sa.Column('class_name', sa.VARCHAR(length=20), nullable=True),
    sa.Column('level', sa.SMALLINT(), nullable=True),
    sa.ForeignKeyConstraint(['class_name'], ['classes_enum.classes'], ),
    sa.ForeignKeyConstraint(['username'], ['users.username'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('ursus_tour',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('username', sa.VARCHAR(length=20), nullable=True),
    sa.Column('date', sa.DATE(), nullable=True),
    sa.Column('ursus', sa.INTEGER(), nullable=True),
    sa.Column('tour', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['username'], ['users.username'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('bossing',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('character', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('first_day_of_week', sa.DATE(), nullable=True),
    sa.Column('is_current_week', sa.BOOLEAN(), nullable=True),
    sa.Column('bossing_list', sa.TEXT(), nullable=True),
    sa.Column('bossing_done', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['character'], ['characters.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('dailies',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('character', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('date', sa.DATE(), nullable=True),
    sa.Column('is_current_day', sa.BOOLEAN(), nullable=True),
    sa.Column('dailies_list', sa.TEXT(), nullable=True),
    sa.Column('dailies_done', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['character'], ['characters.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('weeklies',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('character', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('first_day_of_week', sa.DATE(), nullable=True),
    sa.Column('is_current_week', sa.BOOLEAN(), nullable=True),
    sa.Column('weeklies_list', sa.TEXT(), nullable=True),
    sa.Column('weeklies_done', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['character'], ['characters.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('weeklies')
    op.drop_table('dailies')
    op.drop_table('bossing')
    op.drop_table('ursus_tour')
    op.drop_table('legion')
    op.drop_table('characters')
    op.drop_table('users')
    op.drop_table('events_world_shops')
    op.drop_table('events_sub')
    op.drop_table('events_main')
    op.drop_table('events_character_shops')
    op.drop_table('bosses')
    op.drop_table('weeklies_default')
    op.drop_table('tracking_enum')
    op.drop_table('roles_enum')
    op.drop_table('dailies_default')
    op.drop_table('classes_enum')
    # ### end Alembic commands ###
